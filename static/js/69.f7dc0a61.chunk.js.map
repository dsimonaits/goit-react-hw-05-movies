{"version":3,"file":"static/js/69.f7dc0a61.chunk.js","mappings":"iOAEaA,EAAgBC,EAAAA,GAAAA,GAAS,sYAkBzBC,EAAaD,EAAAA,GAAAA,GAAS,6CAItBE,EAAWF,EAAAA,GAAAA,IAAU,gD,kBCoBlC,EAtCkB,SAAH,GAAoB,IAAdG,EAAM,EAANA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACEF,IACE,8BACGA,EAAOG,KAAI,YAAiD,IAA9CC,EAAE,EAAFA,GAAIC,EAAW,EAAXA,YAAaC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAChCC,GAD+C,EAARC,SACvB,OAAJH,QAAI,IAAJA,EAAAA,EAAQC,GAKlBG,EAAaN,EAAGO,WACtB,OACE,SAACf,EAAa,WACZ,UAAC,KAAI,CACHgB,GACwB,YAAtBX,EAASY,SAAsB,UACxBH,GAAU,iBACHA,GAEhBI,MAAO,CAAEC,KAAMd,GAAW,WAE1B,SAACF,EAAQ,CACPiB,MAAM,MACNC,IAAMZ,EAvBL,mCAuBwCA,EAArBa,EAAAA,EACpBC,IAAKb,KAEP,SAACR,EAAU,UAAEU,QAdGJ,EAkBxB,KAIR,ECxCagB,EAAmBvB,EAAAA,GAAAA,GAAS,iGCSzC,EARmB,SAAH,GAAoB,IAAdG,EAAM,EAANA,OACpB,OACE,SAACoB,EAAgB,WACf,SAAC,EAAS,CAACpB,OAAQA,KAGzB,C","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieCardItem = styled.li`\n  font-size: 12px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  flex-basis: calc((90% -4 * 15px) / 2);\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 8 * 15px) / 4);\n  }\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc((100% - 8 * 15px) / 5);\n  }\n`;\n\nexport const MovieTitle = styled.h3`\n  margin-top: 10px;\n`;\n\nexport const MovieImg = styled.img`\n  border-radius: 15px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { MovieCardItem } from './MovieCard.styled';\nimport { MovieTitle } from './MovieCard.styled';\nimport { MovieImg } from './MovieCard.styled';\nimport { noImage } from 'images/noImage';\n\nconst MovieCard = ({ movies }) => {\n  const location = useLocation();\n  const imageUrl = 'https://image.tmdb.org/t/p/w500/';\n  return (\n    movies && (\n      <>\n        {movies.map(({ id, poster_path, name, title, overview }) => {\n          let movieName = name ?? title;\n          // if (movieName.length > 19) {\n          //   movieName = movieName.substring(0, 19) + '...';\n          // }\n\n          const idToString = id.toString();\n          return (\n            <MovieCardItem key={id}>\n              <Link\n                to={\n                  location.pathname === '/movies'\n                    ? `${idToString}`\n                    : `movies/${idToString}`\n                }\n                state={{ from: location }}\n              >\n                <MovieImg\n                  width=\"200\"\n                  src={!poster_path ? noImage : imageUrl + poster_path}\n                  alt={name}\n                />\n                <MovieTitle>{movieName}</MovieTitle>\n              </Link>\n            </MovieCardItem>\n          );\n        })}\n      </>\n    )\n  );\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\n\nexport const MoviesListStyled = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n`;\n","import MovieCard from 'components/MovieCard/MovieCard';\nimport { MoviesListStyled } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <MoviesListStyled>\n      <MovieCard movies={movies} />\n    </MoviesListStyled>\n  );\n};\n\nexport default MoviesList;\n"],"names":["MovieCardItem","styled","MovieTitle","MovieImg","movies","location","useLocation","map","id","poster_path","name","title","movieName","overview","idToString","toString","to","pathname","state","from","width","src","noImage","alt","MoviesListStyled"],"sourceRoot":""}