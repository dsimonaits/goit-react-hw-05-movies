{"version":3,"file":"static/js/134.b3161496.chunk.js","mappings":"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","sources":["components/Btn/Btn.styled.js","components/Btn/Btn.jsx","components/PageHeading/PageHeading.styled.js","components/PageHeading/PageHeading.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","pages/Movies.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BtnStyled = styled.button`\n  display: block;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n\n  &:hover {\n    color: var(--primary-color);\n    background-color: var(--secondary-color);\n  }\n`;\n","import { BtnStyled } from './Btn.styled';\n\nfunction Btn({ text, onclickHandler, display }) {\n  return (\n    <BtnStyled type=\"button\" onClick={onclickHandler}>\n      {text}\n    </BtnStyled>\n  );\n}\n\nexport default Btn;\n","import styled from 'styled-components';\n\nexport const Heading = styled.h2`\n  margin-bottom: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { Heading } from './PageHeading.styled';\n\nconst PageHeading = ({ text }) => {\n  return <Heading>{text}</Heading>;\n};\n\nPageHeading.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default PageHeading;\n","import styled from 'styled-components';\n\nexport const SectionStyled = styled.section`\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n","import { PropTypes } from 'prop-types';\nimport { SectionStyled } from './Section.styled';\n\nconst Section = ({ children }) => {\n  return <SectionStyled>{children}</SectionStyled>;\n};\n\nSection.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.element),\n    PropTypes.element,\n  ]).isRequired,\n};\n\nexport default Section;\n","import { useSearchParams } from 'react-router-dom';\nimport { lazy, Suspense, useState, useEffect } from 'react';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport * as moviesApi from '../services/movies-api';\nimport Section from 'components/Section/Section';\nimport Container from 'components/Container/Container';\nimport PageHeading from 'components/PageHeading/PageHeading';\nimport Btn from 'components/Btn/Btn';\n\nconst MoviesList = lazy(() => import('components/MoviesList/MoviesList'));\n\nfunction Movies() {\n  const [status, setStatus] = useState('idle');\n\n  const [moviesByName, setMoviesByName] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [page, setPage] = useState(1);\n\n  const [totalPages, setTotalPages] = useState(null);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setMoviesByName([]);\n\n    const form = e.target;\n    const value = form.elements.query.value;\n    if (value.trim() === '') {\n      return;\n    }\n    setSearchParams({ moviename: value });\n\n    form.reset();\n  };\n\n  useEffect(() => {\n    setStatus('idle');\n    const query = searchParams.get('moviename');\n    if (query === null || query === '') return;\n    Loading.circle();\n    moviesApi\n      .fetchMovieByQuery(query, page)\n      .then(({ results, total_pages: totalPages }) => {\n        setTotalPages(totalPages);\n        if (results.length === 0) {\n          setStatus('rejected');\n        } else {\n          setStatus('pending');\n        }\n\n        setMoviesByName(prevState => {\n          const filteredResult = [];\n          const stateMoviesId = prevState.map(obj => obj.id);\n          results.map(result => {\n            if (!stateMoviesId.includes(result.id)) {\n              filteredResult.push(result);\n            }\n            setStatus('approved');\n            return filteredResult;\n          });\n\n          return [...prevState, ...filteredResult];\n        });\n      })\n      .catch(error => console.log(error))\n      .finally(Loading.remove());\n  }, [searchParams, page]);\n\n  const loadMore = () => {\n    setPage(page + 1);\n  };\n\n  const pageHeading = status => {\n    let text = '';\n    switch (status) {\n      case 'idle':\n        text = 'Looking for something special?';\n        break;\n      case 'rejected':\n        text = 'Nothing matches your search!';\n        break;\n      case 'approved':\n        text = 'Found something!';\n        break;\n\n      default:\n        break;\n    }\n    return text;\n  };\n\n  return (\n    <Section>\n      <Container height=\"400px\">\n        <PageHeading text={pageHeading(status)} />\n\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            name=\"query\"\n            placeholder=\"Write something...\"\n            required\n            autoComplete=\"off\"\n          />\n          <button\n            style={{\n              borderRadius: '5px',\n              marginLeft: '5px',\n              cursor: 'pointer',\n              '&:hover': { color: 'red' },\n            }}\n          >\n            Search\n          </button>\n        </form>\n        {moviesByName && (\n          <Suspense>\n            <MoviesList movies={moviesByName} />\n            {status === 'approved' && page !== totalPages && (\n              <Btn text=\"Load more\" onclickHandler={loadMore} />\n            )}\n          </Suspense>\n        )}\n      </Container>\n    </Section>\n  );\n}\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '4c2c309e2c0263a8769257d39e3c269a';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies(page = 1) {\n  try {\n    const response = await axios('trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n        page,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieDetails(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieReviews(movieId, page = '1') {\n  try {\n    const response = await axios(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        page,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieCast(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieByQuery(query, page) {\n  try {\n    const response = await axios(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query,\n        page,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// http://api.themoviedb.org/3/search/movie?api_key=4c2c309e2c0263a8769257d39e3c269a&query=images\n\n// http://api.themoviedb.org/3/search/movie/?api_key=4c2c309e2c0263a8769257d39e3c269a&query=images\n"],"names":["BtnStyled","styled","text","onclickHandler","display","type","onClick","Heading","SectionStyled","children","MoviesList","lazy","useState","status","setStatus","moviesByName","setMoviesByName","useSearchParams","searchParams","setSearchParams","page","setPage","totalPages","setTotalPages","useEffect","query","get","Loading","moviesApi","then","results","total_pages","length","prevState","filteredResult","stateMoviesId","map","obj","id","result","includes","push","catch","error","console","log","finally","height","pageHeading","onSubmit","e","preventDefault","form","target","value","elements","trim","moviename","reset","name","placeholder","required","autoComplete","style","borderRadius","marginLeft","cursor","color","Suspense","movies","API_KEY","fetchTrendingMovies","axios","params","api_key","response","data","fetchMovieDetails","movieId","fetchMovieReviews","fetchMovieCast","fetchMovieByQuery"],"sourceRoot":""}