{"version":3,"file":"static/js/765.02bac01d.chunk.js","mappings":"iOAeA,EAXwB,WACtB,OAA8BA,EAAAA,EAAAA,UAAS,MAAK,eAArCC,EAAO,KAAEC,EAAU,KAClBC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBH,GAASI,KAAKL,EAClC,GAAG,CAACC,IAEGF,CACT,E,SCXaO,E,QAAcC,GAAAA,GAAS,0H,SCgBpC,EAhBoB,SAAH,GAAkB,IAAZC,EAAI,EAAJA,KACrB,OACE,yBACE,8BACGA,EAAKC,QAAQC,KAAI,YAA8B,IAA3BC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAASC,EAAE,EAAFA,GACpC,OACE,UAACP,EAAW,YACV,wBAAKK,KACL,uBAAIC,MAFYC,EAKtB,OAIR,ECFA,EAZgB,WACd,IAAMd,EAAUe,IAChB,OACEf,IAC4B,IAA3BA,EAAQU,QAAQM,QACf,qDAEA,SAAC,EAAW,CAACP,KAAMT,IAGzB,C,0LCXMiB,EAAU,mCAIT,SAAeC,IAAmB,+BAYxC,8CAZM,uGAA2C,OAARC,EAAI,+BAAG,EAAC,mBAEvBC,EAAAA,EAAAA,GAAM,qBAAsB,CACjDC,OAAQ,CACNC,QAASL,EACTE,KAAAA,KAED,KAAD,EALY,OAARI,EAAQ,yBAMPA,EAASd,MAAI,gCAEpBe,QAAQC,IAAI,EAAD,IAAQ,yDAEtB,wBAEM,SAAeC,EAAkB,GAAD,+BAWtC,8CAXM,WAAiCxB,GAAO,sGAEpBkB,EAAAA,EAAAA,GAAM,SAAD,OAAUlB,GAAW,CAC/CmB,OAAQ,CACNC,QAASL,KAEV,KAAD,EAJY,OAARM,EAAQ,yBAKPA,EAASd,MAAI,gCAEpBe,QAAQC,IAAI,EAAD,IAAQ,0DAEtB,sBAEM,SAAepB,EAAkB,GAAD,+BAYtC,8CAZM,WAAiCH,GAAO,0FAAY,OAAViB,EAAI,+BAAG,IAAG,mBAEhCC,EAAAA,EAAAA,GAAM,SAAD,OAAUlB,EAAO,YAAY,CACvDmB,OAAQ,CACNC,QAASL,EACTE,KAAAA,KAED,KAAD,EALY,OAARI,EAAQ,yBAMPA,EAASd,MAAI,gCAEpBe,QAAQC,IAAI,EAAD,IAAQ,yDAEtB,wBAEM,SAAeE,EAAe,GAAD,+BAWnC,8CAXM,WAA8BzB,GAAO,sGAEjBkB,EAAAA,EAAAA,GAAM,SAAD,OAAUlB,EAAO,YAAY,CACvDmB,OAAQ,CACNC,QAASL,KAEV,KAAD,EAJY,OAARM,EAAQ,yBAKPA,EAASd,MAAI,gCAEpBe,QAAQC,IAAI,EAAD,IAAQ,0DAEtB,sBAEM,SAAeG,EAAkB,EAAD,kCAiBvC,aAJC,OAID,0BAjBO,WAAiCC,EAAOV,GAAI,sGAExBC,EAAAA,EAAAA,GAAM,eAAgB,CAC3CC,OAAQ,CACNC,QAASL,EACTY,MAAAA,EACAV,KAAAA,KAED,KAAD,EANY,OAARI,EAAQ,yBAOPA,EAASd,MAAI,gCAEpBe,QAAQC,IAAI,EAAD,IAAQ,0DAEtB,sBArEDL,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["Hooks/useFetchReviews.js","components/ReviewsLIst/ReviewsList.styled.js","components/ReviewsLIst/ReviewsList.jsx","pages/Reviews.jsx","services/movies-api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/movies-api';\n\nconst useFetchReviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return reviews;\n};\n\nexport default useFetchReviews;\n","import styled from 'styled-components';\n\nexport const ReviewsItem = styled.li`\n  list-style: disc;\n  margin-left: 10px;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n","import { ReviewsItem } from './ReviewsList.styled';\n\nconst ReviewsList = ({ data }) => {\n  return (\n    <ul>\n      <>\n        {data.results.map(({ author, content, id }) => {\n          return (\n            <ReviewsItem key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </ReviewsItem>\n          );\n        })}\n      </>\n    </ul>\n  );\n};\nexport default ReviewsList;\n","import useFetchReviews from 'Hooks/useFetchReviews';\nimport ReviewsList from 'components/ReviewsLIst/ReviewsList';\n\nconst Reviews = () => {\n  const reviews = useFetchReviews();\n  return (\n    reviews &&\n    (reviews.results.length === 0 ? (\n      <p>There is no reviews yet!</p>\n    ) : (\n      <ReviewsList data={reviews} />\n    ))\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '4c2c309e2c0263a8769257d39e3c269a';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies(page = 1) {\n  try {\n    const response = await axios('trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n        page,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieDetails(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieReviews(movieId, page = '1') {\n  try {\n    const response = await axios(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        page,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieCast(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieByQuery(query, page) {\n  try {\n    const response = await axios(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query,\n        page,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// http://api.themoviedb.org/3/search/movie?api_key=4c2c309e2c0263a8769257d39e3c269a&query=images\n\n// http://api.themoviedb.org/3/search/movie/?api_key=4c2c309e2c0263a8769257d39e3c269a&query=images\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovieReviews","then","ReviewsItem","styled","data","results","map","author","content","id","useFetchReviews","length","API_KEY","fetchTrendingMovies","page","axios","params","api_key","response","console","log","fetchMovieDetails","fetchMovieCast","fetchMovieByQuery","query"],"sourceRoot":""}