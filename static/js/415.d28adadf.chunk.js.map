{"version":3,"file":"static/js/415.d28adadf.chunk.js","mappings":"yLAEaA,E,QAAYC,GAAAA,OAAa,8Q,SCQtC,MARA,SAAa,GAAoC,IAAlCC,EAAI,EAAJA,KAAMC,EAAc,EAAdA,eACnB,OAD0C,EAAPC,SAEjC,SAACJ,EAAS,CAACK,KAAK,SAASC,QAASH,EAAe,SAC9CD,GAGP,C,uHCNaK,EAAgBN,EAAAA,GAAAA,GAAS,sYAkBzBO,EAAaP,EAAAA,GAAAA,GAAS,6CAItBQ,EAAWR,EAAAA,GAAAA,IAAU,2F,mBCiBlC,EAnCkB,SAAH,GAAoB,IAAdS,EAAM,EAANA,OAEbC,GAAWC,EAAAA,EAAAA,MAGjB,OACEF,IACE,8BACGA,EAAOG,KAAI,YAAiD,IAA9CC,EAAE,EAAFA,GAAIC,EAAW,EAAXA,YAAaC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAChCC,GAD+C,EAARC,SACvB,OAAJH,QAAI,IAAJA,EAAAA,EAAQC,GAElBG,EAAUL,EARP,mCAQ0CA,EAArBM,EAAAA,EAExBC,EAAaR,EAAGS,WACtB,OACE,SAAChB,EAAa,WACZ,UAAC,KAAI,CACHiB,GACwB,YAAtBb,EAASc,SAAsB,UACxBH,GAAU,iBACHA,GAEhBI,MAAO,CAAEC,KAAMhB,GAAW,WAE1B,SAACF,EAAQ,CAACmB,MAAM,MAAMC,IAAKT,EAAQU,IAAKd,EAAMe,QAAQ,UACtD,SAACvB,EAAU,UAAEU,QAVGJ,EAcxB,KAIR,ECrCakB,EAAmB/B,EAAAA,GAAAA,GAAS,mICYzC,EATmB,SAAH,GAAoB,IAAdS,EAAM,EAANA,OACpB,OACE,SAACsB,EAAgB,WACf,SAAC,EAAS,CAACtB,OAAQA,KAIzB,C,sECVauB,E,QAAUhC,GAAAA,GAAS,gD,SCShC,EARoB,SAAH,GAAkB,IAAZC,EAAI,EAAJA,KACrB,OAAO,SAAC+B,EAAO,UAAE/B,GACnB,C,sECHagC,E,QAAgBjC,GAAAA,QAAc,uE,SCY3C,EAXgB,SAAH,GAAsB,IAAhBkC,EAAQ,EAARA,SACjB,OAAO,SAACD,EAAa,UAAEC,GACzB,C,uDCLO,IAAMd,EACX,qG,8IC2EF,UAlEa,WACX,OAA4Be,EAAAA,EAAAA,UAAS,QAAO,eAArCC,EAAM,KAAEC,EAAS,KACxB,GAA4CF,EAAAA,EAAAA,UAAS,IAAG,eAAjDG,EAAc,KAAEC,EAAiB,KAExC,GAAwBJ,EAAAA,EAAAA,UAAS,GAAE,eAA5BK,EAAI,KAAEC,EAAO,KAEdC,GAAgBC,EAAAA,EAAAA,SAAO,IAE7BC,EAAAA,EAAAA,YAAU,WAER,GADAP,EAAU,QACNK,EAAcG,QAChBH,EAAcG,SAAU,MAD1B,CAKAC,EAAAA,GACuBN,GACpBO,MAAK,YAAkB,IAAfC,EAAO,EAAPA,QACgB,IAAnBA,EAAQC,OACVZ,EAAU,YAEVA,EAAU,WAGZE,GAAkB,SAAAW,GAChB,IAAMC,EAAiB,GACjBC,EAAgBF,EAAUtC,KAAI,SAAAyC,GAAG,OAAIA,EAAIxC,EAAE,IASjD,OARAmC,EAAQpC,KAAI,SAAA0C,GAKV,OAJKF,EAAcG,SAASD,EAAOzC,KACjCsC,EAAeK,KAAKF,GAEtBjB,EAAU,YACHc,CACT,IAEM,GAAN,eAAWD,GAAcC,EAC3B,GACF,IACCM,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAM,IACjCG,UAzB+BC,EAAAA,QAAAA,SA4BlCA,EAAAA,QAAAA,QA7BA,CA8BF,GAAG,CAACtB,IAMJ,OACE,SAAC,IAAO,WACN,UAAC,IAAS,YACR,SAAC,IAAW,CAACvC,KAAK,cACjBqC,IACC,iCACE,SAAC,UAAU,CAAC7B,OAAQ6B,IACR,aAAXF,IACC,SAAC,IAAG,CAACnC,KAAK,YAAYC,eAZjB,WACfuC,EAAQD,EAAO,EACjB,WAiBF,C,0LCxEMuB,EAAU,mCAIT,SAAeC,IAAmB,+BAYxC,8CAZM,uGAA2C,OAARxB,EAAI,+BAAG,EAAC,mBAEvByB,EAAAA,EAAAA,GAAM,qBAAsB,CACjDC,OAAQ,CACNC,QAASJ,EACTvB,KAAAA,KAED,KAAD,EALY,OAAR4B,EAAQ,yBAMPA,EAASC,MAAI,gCAEpBV,QAAQC,IAAI,EAAD,IAAQ,yDAEtB,wBAEM,SAAeU,EAAkB,GAAD,+BAWtC,8CAXM,WAAiCC,GAAO,sGAEpBN,EAAAA,EAAAA,GAAM,SAAD,OAAUM,GAAW,CAC/CL,OAAQ,CACNC,QAASJ,KAEV,KAAD,EAJY,OAARK,EAAQ,yBAKPA,EAASC,MAAI,gCAEpBV,QAAQC,IAAI,EAAD,IAAQ,0DAEtB,sBAEM,SAAeY,EAAkB,GAAD,+BAYtC,8CAZM,WAAiCD,GAAO,0FAAY,OAAV/B,EAAI,+BAAG,IAAG,mBAEhCyB,EAAAA,EAAAA,GAAM,SAAD,OAAUM,EAAO,YAAY,CACvDL,OAAQ,CACNC,QAASJ,EACTvB,KAAAA,KAED,KAAD,EALY,OAAR4B,EAAQ,yBAMPA,EAASC,MAAI,gCAEpBV,QAAQC,IAAI,EAAD,IAAQ,yDAEtB,wBAEM,SAAea,EAAe,GAAD,+BAWnC,8CAXM,WAA8BF,GAAO,sGAEjBN,EAAAA,EAAAA,GAAM,SAAD,OAAUM,EAAO,YAAY,CACvDL,OAAQ,CACNC,QAASJ,KAEV,KAAD,EAJY,OAARK,EAAQ,yBAKPA,EAASC,MAAI,gCAEpBV,QAAQC,IAAI,EAAD,IAAQ,0DAEtB,sBAEM,SAAec,EAAkB,EAAD,kCAiBvC,aAJC,OAID,0BAjBO,WAAiCC,EAAOnC,GAAI,sGAExByB,EAAAA,EAAAA,GAAM,eAAgB,CAC3CC,OAAQ,CACNC,QAASJ,EACTY,MAAAA,EACAnC,KAAAA,KAED,KAAD,EANY,OAAR4B,EAAQ,yBAOPA,EAASC,MAAI,gCAEpBV,QAAQC,IAAI,EAAD,IAAQ,0DAEtB,sBArEDK,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/Btn/Btn.styled.js","components/Btn/Btn.jsx","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/PageHeading/PageHeading.styled.js","components/PageHeading/PageHeading.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","images/noImage.js","pages/Home.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BtnStyled = styled.button`\n  display: block;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n\n  &:hover {\n    color: var(--primary-color);\n    background-color: var(--secondary-color);\n  }\n`;\n","import { BtnStyled } from './Btn.styled';\n\nfunction Btn({ text, onclickHandler, display }) {\n  return (\n    <BtnStyled type=\"button\" onClick={onclickHandler}>\n      {text}\n    </BtnStyled>\n  );\n}\n\nexport default Btn;\n","import styled from 'styled-components';\n\nexport const MovieCardItem = styled.li`\n  font-size: 12px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  flex-basis: calc((90% -4 * 15px) / 2);\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 8 * 15px) / 4);\n  }\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc((100% - 8 * 15px) / 5);\n  }\n`;\n\nexport const MovieTitle = styled.h3`\n  margin-top: 10px;\n`;\n\nexport const MovieImg = styled.img`\n  min-width: 200px;\n  min-height: 300px;\n  border-radius: 15px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { MovieCardItem } from './MovieCard.styled';\nimport { MovieTitle } from './MovieCard.styled';\nimport { MovieImg } from './MovieCard.styled';\nimport { noImage } from 'images/noImage';\nimport PropTypes from 'prop-types';\nconst MovieCard = ({ movies }) => {\n  // const [imageLoaded, setImageLoaded] = useState(false);\n  const location = useLocation();\n  const imageUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  return (\n    movies && (\n      <>\n        {movies.map(({ id, poster_path, name, title, overview }) => {\n          let movieName = name ?? title;\n\n          const imgSrc = !poster_path ? noImage : imageUrl + poster_path;\n\n          const idToString = id.toString();\n          return (\n            <MovieCardItem key={id}>\n              <Link\n                to={\n                  location.pathname === '/movies'\n                    ? `${idToString}`\n                    : `movies/${idToString}`\n                }\n                state={{ from: location }}\n              >\n                <MovieImg width=\"200\" src={imgSrc} alt={name} loading=\"lazy\" />\n                <MovieTitle>{movieName}</MovieTitle>\n              </Link>\n            </MovieCardItem>\n          );\n        })}\n      </>\n    )\n  );\n};\n\nexport default MovieCard;\n\nMovieCard.propTypes = {\n  movies: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const MoviesListStyled = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  justify-content: space-around;\n`;\n","import PropTypes from 'prop-types';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { MoviesListStyled } from './MoviesList.styled';\n// import Btn from 'components/Btn/Btn';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <MoviesListStyled>\n      <MovieCard movies={movies} />\n      {/* <Btn text=\"Load more\" /> */}\n    </MoviesListStyled>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Heading = styled.h2`\n  margin-bottom: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { Heading } from './PageHeading.styled';\n\nconst PageHeading = ({ text }) => {\n  return <Heading>{text}</Heading>;\n};\n\nPageHeading.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default PageHeading;\n","import styled from 'styled-components';\n\nexport const SectionStyled = styled.section`\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n","import { PropTypes } from 'prop-types';\nimport { SectionStyled } from './Section.styled';\n\nconst Section = ({ children }) => {\n  return <SectionStyled>{children}</SectionStyled>;\n};\n\nSection.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.element),\n    PropTypes.element,\n  ]).isRequired,\n};\n\nexport default Section;\n","export const noImage =\n  'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRY7RyB6wNXTa0DqKQeoBOoOu6_pqCbQmBqVQ&usqp=CAU';\n","import * as moviesApi from '../services/movies-api';\nimport { useState, useEffect } from 'react';\nimport Section from 'components/Section/Section';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport PageHeading from 'components/PageHeading/PageHeading';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Container from 'components/Container/Container';\nimport Btn from 'components/Btn/Btn';\nimport { useRef } from 'react';\n\nconst Home = () => {\n  const [status, setStatus] = useState('idle');\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  const [page, setPage] = useState(1);\n\n  const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    setStatus('idle');\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    const trendingMoviesFetch = () => Loading.circle();\n    moviesApi\n      .fetchTrendingMovies(page)\n      .then(({ results }) => {\n        if (results.length === 0) {\n          setStatus('rejected');\n        } else {\n          setStatus('pending');\n        }\n\n        setTrendingMovies(prevState => {\n          const filteredResult = [];\n          const stateMoviesId = prevState.map(obj => obj.id);\n          results.map(result => {\n            if (!stateMoviesId.includes(result.id)) {\n              filteredResult.push(result);\n            }\n            setStatus('approved');\n            return filteredResult;\n          });\n\n          return [...prevState, ...filteredResult];\n        });\n      })\n      .catch(error => console.log(error))\n      .finally();\n\n    trendingMoviesFetch();\n    Loading.remove();\n  }, [page]);\n\n  const loadMore = () => {\n    setPage(page + 1);\n  };\n\n  return (\n    <Section>\n      <Container>\n        <PageHeading text=\"Day`s Top\" />\n        {trendingMovies && (\n          <>\n            <MoviesList movies={trendingMovies} />\n            {status === 'approved' && (\n              <Btn text=\"Load more\" onclickHandler={loadMore} />\n            )}\n          </>\n        )}\n      </Container>\n    </Section>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '4c2c309e2c0263a8769257d39e3c269a';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrendingMovies(page = 1) {\n  try {\n    const response = await axios('trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n        page,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieDetails(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieReviews(movieId, page = '1') {\n  try {\n    const response = await axios(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        page,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieCast(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieByQuery(query, page) {\n  try {\n    const response = await axios(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query,\n        page,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// http://api.themoviedb.org/3/search/movie?api_key=4c2c309e2c0263a8769257d39e3c269a&query=images\n\n// http://api.themoviedb.org/3/search/movie/?api_key=4c2c309e2c0263a8769257d39e3c269a&query=images\n"],"names":["BtnStyled","styled","text","onclickHandler","display","type","onClick","MovieCardItem","MovieTitle","MovieImg","movies","location","useLocation","map","id","poster_path","name","title","movieName","overview","imgSrc","noImage","idToString","toString","to","pathname","state","from","width","src","alt","loading","MoviesListStyled","Heading","SectionStyled","children","useState","status","setStatus","trendingMovies","setTrendingMovies","page","setPage","isFirstRender","useRef","useEffect","current","moviesApi","then","results","length","prevState","filteredResult","stateMoviesId","obj","result","includes","push","catch","error","console","log","finally","Loading","API_KEY","fetchTrendingMovies","axios","params","api_key","response","data","fetchMovieDetails","movieId","fetchMovieReviews","fetchMovieCast","fetchMovieByQuery","query"],"sourceRoot":""}